{"version":3,"sources":["component/Header.js","component/photo-caption/ImageUpload.js","component/photo-caption/NameInput.js","component/photo-caption/PhotoCanvas.js","component/Footer.js","App.js","serviceWorker.js","index.js","images/devfest-photo-caption.jpg"],"names":["Header","react_default","a","createElement","ImageUpload","handleUploadAlt","_this","refs","imgUpload","click","className","ref","style","display","type","accept","onChange","this","props","eventHandler","handleImage","onClick","React","Component","NameInput","onSubmit","handleText","value","fullName","name","placeholder","handleInput","PhotoCanvas","state","userUpload","drawUserImage","context","canvas","getContext","userImg","onload","width","height","drawImage","wRatio","hRatio","ratio","Math","min","startX","startY","scaleX","scaleY","console","log","clearRect","event","_event$target","target","setState","Object","defineProperty","preventDefault","URL","createObjectURL","files","userName","canvasImg","fillText","toUpperCase","download","handleDownload","dataURL","toDataURL","tempLink","document","href","body","appendChild","removeChild","font","fillStyle","photo_caption_ImageUpload","photo_caption_NameInput","src","devfest","alt","Footer","App","component_Header","photo_caption_PhotoCanvas","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.086ce269.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <p>Devfest Ogbomoso Photo Caption</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nclass ImageUpload extends React.Component {\r\n    handleUploadAlt = () => {\r\n        this.refs.imgUpload.click()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"steps-container\">\r\n                <label>\r\n                    <span className=\"label\">Step 1:</span>\r\n                    <input\r\n                        ref=\"imgUpload\"\r\n                        style={{display:\"none\"}}\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.props.eventHandler.handleImage}\r\n                    />\r\n                </label>              \r\n                <button onClick={this.handleUploadAlt}>Upload your Picture</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageUpload","import React from \"react\"\r\n\r\nfunction NameInput(props) {\r\n    return (\r\n        <form onSubmit={props.eventHandler.handleText}>\r\n            <label className=\"steps-container\">\r\n                <span className=\"label\">Step 2:</span>\r\n                <input\r\n                    type=\"text\"\r\n                    value={props.fullName}\r\n                    name=\"fullName\"\r\n                    placeholder=\"Enter your Name\"\r\n                    onChange={props.eventHandler.handleInput}\r\n                />\r\n            </label>\r\n            <div className=\"flexbox steps-container\">\r\n                <span className=\"label\">Step 3:</span>\r\n                <button>Generate Photo Caption</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NameInput","import React from \"react\"\r\n\r\nimport devfest from \"../../images/devfest-photo-caption.jpg\"\r\n\r\nimport ImageUpload from \"./ImageUpload\"\r\nimport NameInput from \"./NameInput\"\r\n\r\nclass PhotoCanvas extends React.Component {\r\n    state = {\r\n        fullName: \"\",\r\n        userUpload: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const canvasImg = this.refs.canvasImg\r\n\r\n        context.font = \"55px arial\"\r\n        context.fillStyle = \"white\"\r\n\r\n        canvasImg.onload = () => {\r\n            context.drawImage(canvasImg, 0, 0, canvas.width, canvas.height)\r\n        }\r\n    }\r\n\r\n    drawUserImage = () => {\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const userImg = this.refs.userImg\r\n\r\n        userImg.onload = () => {\r\n            if(userImg.width === userImg.height) {\r\n                context.drawImage(userImg, 62, 282, 370, 370)\r\n            } else {\r\n                const wRatio = 370 / userImg.width\r\n                const hRatio = 370 / userImg.height\r\n\r\n                const ratio = Math.min(wRatio, hRatio)\r\n                \r\n                let startX = 370 - userImg.width*ratio\r\n                if(startX === 0) {\r\n                    startX = 62\r\n                } else if(startX < 62) {\r\n                    let remainder = startX / 2\r\n                    startX = 62 + remainder\r\n                }\r\n\r\n                let startY = 370 - userImg.height*ratio\r\n                if(startY === 0) {\r\n                    startY = 282\r\n                } else if(startY < 282) {\r\n                    let remainder = startY / 2\r\n                    startY = 282 + remainder\r\n                }\r\n\r\n                let scaleX = userImg.width\r\n                let scaleY = userImg.height\r\n                \r\n                if(userImg.width < userImg.height) {\r\n                    scaleY = userImg.width\r\n                } else if(userImg.height < userImg.width) {\r\n                    scaleX = userImg.height\r\n                }\r\n                \r\n                console.log(\"Width: \"+userImg.width*ratio+\" Height: \"+userImg.height*ratio)\r\n\r\n                context.clearRect(62, 282, 370, 370)\r\n                context.drawImage(userImg, 0, 0, scaleX, scaleY, 62, 282, 370, 370 )\r\n            }\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleImage = (event) => {\r\n        event.preventDefault()\r\n\r\n        this.setState({\r\n            userUpload: URL.createObjectURL(event.target.files[0])\r\n        })\r\n\r\n        this.drawUserImage()\r\n    }\r\n    \r\n    handleText = (event) => {\r\n        event.preventDefault()\r\n\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const userName = this.state.fullName\r\n\r\n        const canvasImg = this.refs.canvasImg\r\n        const userImg = this.refs.userImg\r\n\r\n        if(userName) {\r\n            context.clearRect(375, 0, canvas.width, canvas.height)\r\n            context.drawImage(canvasImg, 0, 0, canvas.width, canvas.height)\r\n            \r\n            if(userImg) {\r\n                if(userImg.width === userImg.height) {\r\n                    context.drawImage(userImg, 62, 282, 370, 370)\r\n                } else {\r\n                    const wRatio = 370 / userImg.width\r\n                    const hRatio = 370 / userImg.height\r\n    \r\n                    const ratio = Math.min(wRatio, hRatio)\r\n                    \r\n                    let startX = (370 - userImg.width*ratio)\r\n                    if(startX === 0) {\r\n                        startX = 62\r\n                    } else if(startX < 62) {\r\n                        let remainder = startX / 2\r\n                        startX = 62 + remainder\r\n                    }\r\n    \r\n                    let startY = (370 - userImg.height*ratio)\r\n                    if(startY === 0) {\r\n                        startY = 282\r\n                    } else if(startY < 282) {\r\n                        let remainder = startY / 2\r\n                        startY = 282 + remainder\r\n                    }\r\n    \r\n                    context.clearRect(62, 282, 370, 370)\r\n                    context.drawImage(userImg, 0, 0, userImg.width, userImg.height, startX, startY, userImg.width*ratio, userImg.height*ratio )\r\n                }\r\n            }\r\n            context.fillText(userName.toUpperCase(), 484, 400, 580)\r\n            this.refs.download.style.display = \"block\"\r\n        }\r\n    }\r\n    \r\n    handleDownload = (event) => {\r\n        const dataURL = this.refs.canvas.toDataURL()\r\n    \r\n        const tempLink = document.createElement(\"a\")\r\n        tempLink.download = \"Devfest Ogbomoso.jpg\"\r\n        tempLink.href = dataURL\r\n\r\n        document.body.appendChild(tempLink)\r\n        tempLink.click()\r\n        document.body.removeChild(tempLink)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-md-auto\">\r\n                    <ImageUpload eventHandler = {this} />\r\n                    <NameInput eventHandler = {this} />\r\n\r\n                    <div\r\n                        ref=\"download\"\r\n                        className=\"flexbox steps-container\"\r\n                        style={{display:\"none\"}}\r\n                    >\r\n                        <span className=\"label\">Step 4:</span>\r\n                        <button\r\n                            onClick={this.handleDownload}\r\n                        >Download</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-auto\">\r\n                    <canvas ref=\"canvas\" width={1080} height={1080}></canvas>\r\n                    <img style={{display:\"none\"}} ref=\"canvasImg\" src={devfest} alt=\"\"/>\r\n                    <img style={{display:\"none\"}} ref=\"userImg\" src={this.state.userUpload} alt=\"\"/>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhotoCanvas","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n            <hr />\r\n            <span>Photo Caption for <a href=\"https://twitter.com/gdgogbomoso\">GDG Ogbomoso</a>'s Dvfest 2019</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\"\n\nimport Header from \"./component/Header\"\nimport PhotoCanvas from \"./component/photo-caption/PhotoCanvas\"\nimport Footer from \"./component/Footer\"\n\nfunction App() {\n    return(\n        <div className=\"container\">\n            <Header />\n            <PhotoCanvas />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","module.exports = __webpack_public_path__ + \"static/media/devfest-photo-caption.6fafc51a.jpg\";"],"sourceRoot":""}