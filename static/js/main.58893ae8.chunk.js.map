{"version":3,"sources":["component/Header.js","component/photo-caption/ImageUpload.js","component/photo-caption/NameInput.js","component/photo-caption/PhotoCanvas.js","component/Footer.js","App.js","serviceWorker.js","index.js","images/devfest-photo-caption.jpg"],"names":["Header","react_default","a","createElement","ImageUpload","handleUploadAlt","_this","refs","imgUpload","click","className","ref","style","display","type","accept","onChange","this","props","eventHandler","handleImage","onClick","React","Component","NameInput","onSubmit","handleText","value","fullName","name","placeholder","handleInput","PhotoCanvas","state","userUpload","event","_event$target","target","setState","Object","defineProperty","preventDefault","URL","createObjectURL","files","context","canvas","getContext","userImg","onload","drawImage","userName","fillText","toUpperCase","download","handleDownload","dataURL","toDataURL","tempLink","document","href","body","appendChild","removeChild","canvasImg","font","fillStyle","width","height","photo_caption_ImageUpload","photo_caption_NameInput","src","devfest","alt","Footer","App","component_Header","photo_caption_PhotoCanvas","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.58893ae8.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <p>Devfest Ogbomoso Photo Caption</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nclass ImageUpload extends React.Component {\r\n    handleUploadAlt = () => {\r\n        this.refs.imgUpload.click()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"steps-container\">\r\n                <label>\r\n                    <span className=\"label\">Step 1:</span>\r\n                    <input\r\n                        ref=\"imgUpload\"\r\n                        style={{display:\"none\"}}\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.props.eventHandler.handleImage}\r\n                    />\r\n                </label>              \r\n                <button onClick={this.handleUploadAlt}>Upload your Picture</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageUpload","import React from \"react\"\r\n\r\nfunction NameInput(props) {\r\n    return (\r\n        <form onSubmit={props.eventHandler.handleText}>\r\n            <label className=\"steps-container\">\r\n                <span className=\"label\">Step 2:</span>\r\n                <input\r\n                    type=\"text\"\r\n                    value={props.fullName}\r\n                    name=\"fullName\"\r\n                    placeholder=\"Enter your Name\"\r\n                    onChange={props.eventHandler.handleInput}\r\n                />\r\n            </label>\r\n            <div className=\"flexbox steps-container\">\r\n                <span className=\"label\">Step 3:</span>\r\n                <button>Generate Photo Caption</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NameInput","import React from \"react\"\r\n\r\nimport devfest from \"../../images/devfest-photo-caption.jpg\"\r\n\r\nimport ImageUpload from \"./ImageUpload\"\r\nimport NameInput from \"./NameInput\"\r\n\r\nclass PhotoCanvas extends React.Component {\r\n    state = {\r\n        fullName: \"\",\r\n        userUpload: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const canvasImg = this.refs.canvasImg\r\n\r\n        context.font = \"55px arial\"\r\n        context.fillStyle = \"white\"\r\n\r\n        canvasImg.onload = () => {\r\n            context.drawImage(canvasImg, 0, 0, canvas.width, canvas.height)\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleImage = (event) => {\r\n        event.preventDefault()\r\n\r\n        this.setState({\r\n            userUpload: URL.createObjectURL(event.target.files[0])\r\n        })\r\n\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const userImg = this.refs.userImg\r\n\r\n        userImg.onload = () => {\r\n            context.drawImage(userImg, 62, 282, 370, 370)\r\n        }\r\n    }\r\n\r\n    handleText = (event) => {\r\n        event.preventDefault()\r\n\r\n        const canvas = this.refs.canvas\r\n        const context = canvas.getContext(\"2d\")\r\n        const userName = this.state.fullName\r\n\r\n        if(userName) {\r\n            context.fillText(userName.toUpperCase(), 484, 400)\r\n            this.refs.download.style.display = \"block\"\r\n        }\r\n    }\r\n    \r\n    handleDownload = (event) => {\r\n        const dataURL = this.refs.canvas.toDataURL()\r\n    \r\n        const tempLink = document.createElement(\"a\")\r\n        tempLink.download = \"Devfest Ogbomoso.jpg\"\r\n        tempLink.href = dataURL\r\n\r\n        document.body.appendChild(tempLink)\r\n        tempLink.click()\r\n        document.body.removeChild(tempLink)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-md-auto\">\r\n                    <ImageUpload eventHandler = {this} />\r\n                    <NameInput eventHandler = {this} />\r\n\r\n                    <div\r\n                        ref=\"download\"\r\n                        className=\"flexbox steps-container\"\r\n                        style={{display:\"none\"}}\r\n                    >\r\n                        <span className=\"label\">Step 4:</span>\r\n                        <button\r\n                            onClick={this.handleDownload}\r\n                        >Download</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-auto\">\r\n                    <canvas ref=\"canvas\" width={1080} height={1080}></canvas>\r\n                    <img style={{display:\"none\"}} ref=\"canvasImg\" src={devfest} alt=\"\"/>\r\n                    <img style={{display:\"none\"}} ref=\"userImg\" src={this.state.userUpload} alt=\"\"/>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhotoCanvas","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n            <hr />\r\n            <span>Photo Caption for <a href=\"https://twitter.com/gdgogbomoso\">GDG Ogbomoso</a>'s Dvfest 2019</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\"\n\nimport Header from \"./component/Header\"\nimport PhotoCanvas from \"./component/photo-caption/PhotoCanvas\"\nimport Footer from \"./component/Footer\"\n\nfunction App() {\n    return(\n        <div className=\"container\">\n            <Header />\n            <PhotoCanvas />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","module.exports = __webpack_public_path__ + \"static/media/devfest-photo-caption.6fafc51a.jpg\";"],"sourceRoot":""}